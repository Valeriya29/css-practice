 /* html {
  max-width: 720px;

  background: blue;
}

body {
  background: #fff;
} */
/* це глобальний (універсальний) селектор
 *{
  color:red;
} */
 /* селект h1 додає любий колір до тексту,який відноситься до h1
h1 {
  color:green;
} */
/* буде спрацьовувати каскадність(все що буде додано нижче буде мати приорітет)
h1 {
  color:orange;
} */

 /* селектор :root це абстактний тег(в який можна додати головніші теги:зчитує html код)
:root {
 background: purple;
} */

/* цей селектор (класу)надає стилі для всіх тегів,які мають певний клас,який був вказаний в селекті(та потім його передати в html коді він починається з цого знаку ".")
.box {
  background:#939393;
}

.button {
  background: red;
  color:black;
 } */

/* в css коді є можливість використовувати декілька селекторів,до яких треба додати певний набір властивостей
h1,
h2#user,
button.button#button {
  color:green
} */

/* селектор класу(ідентифікатора) починається з "#"і за ним слідує імʼя.цей селектор надає стилі для всих тегів,які мають певний ідентифікатор(який був вказаний у селекторі)
#user,
.user {
  color:blue;
} */
/* дочірній селетор-він надає стилі для всіх тегів,які є дочірніми тегами головного тегу(для цього треба вказати цей знак ">"
#box > p {
  color:paleturquoise;
}

footer > .user {
  color:palevioletred;
}

footer > h1 {
  color:palevioletred;
} */
/* селектор нащадка-це будь-який тег в середині тега незалежно від його вкладеності(позначається через пробіл або ">>")
footer em.child,
footer div.child {
  color:rgb(16, 225, 117);
} */

/* сестринський тег
h1 + p {
  background: black;
} */
     /* сусідський селектор-надає стилі для всіх сусідських тегів,які йдуть писля основного тегу_для цього вказуємо "~"тільду
h1 ~ p,
h1 ~ * > p {
  background: black;
}  */

/*  --------------------------------------------------------------------------------------------- */


 .card-dark {
  background:#cecaca;
 }

 .item {
  color:green
 }

/* селектор першої/останньої дитини-вибирає перший тег,якщо він є дитиною в середині батківського тегу.позначається ":"селектор псевдокласу(визначає особливий стан :first/:last).
 селектор однієх дитини-вибирає один тег,якщо він є дитиною в середині батківського тегу.позначається ":"селектор псевдокласу(визначає особливий стан only).
 селектор першого/останнього типу-вибирає перший елемент по заданому тегу серед сусідських (first/last)*/
 
/* .item:last-of-type {
  color:blue;
 } */
/* селетор одиничного типу-якщо він є єдиним таким тегом серед сусідів(:only) */
 /* .item:only-of-type {
  color:red;
 } */
/* селектор порядкової/зворотньої порядкової дитини-обирає елемент на основі їхньої позиції в батківському елементі :nth-child()/:nth-last-child() */
 /* .item:nth-last-child(){
  color:yellowgreen;
 }

 p:not(.item) {
  color:purple;
 } */

/*  --------------------------------------------------------------------------------------------- */
.input-dark {
  background:#858181;
 }

 /* селектор атрибутів-дозволяє вибрати елементи на основі їх атритутів і їх значень "[]".
  селектор значення атрибута-вибирає тег,якщо він має вказаний атрибут з вказаним значенням "[atr="value"]" ;атрибут=значення.
  селектор нявності з.а.-вибирає тег,в якому можуть перебувати декілька значень,одне з яких є вказаним значенням "[atr~="value"]".
  селектор префіксу з.а.-вибирає тег,якщо він має вказаний атрибут,значення якого починається з вказаного value або value- ; [atr|="value"].
  селектор початку з.а.-вибирає тег,якщо він має вказаний атрибут,значення якого починається з вказаного value ; [atr^="value"].
  селектор кореня з.а.-вибирає тег,якщо він має вказаний атрибут,значення якого має корінь value ;[atr*="value"].
  сеоектор кінцівки з.а.-вибирає тег,якщо він має вказаний атрибут,значення якого закінчується з вказаного value ;[atr$="value"].*/
 .input-dark[required] {
  background:#ef2e2e;
 }

  .input-dark[type=number] {
  background:#01b219;
 }

 .small-img[alt~="small"]{
  height: 500px;
 }

 a[rel~="external"]{
  color:green;
 }

 button[class|="btn"]{
  background: rgb(141, 98, 98);
 }

  a[class*="btn"]{
  background: rgb(144, 52, 52);
 }

  a[class$="big"]{
  background: rgb(30, 33, 125);
 }

 /* селектор псевдоелементів/першої літери/першого рядка-дозволяє стилізувати певні частини елементів або стилізація першої літери/першого рядка "::" .
 селект псевдоелемента плейсхолдер-задає стилізацию для тексту атрибута placeholder тегу input "::placeholder" .
 селект псевдоелемента "попереду"-надає можливість вказати контент,який буде йти попереду основного елемента та надати йому стилізацію "::before" та доступніий content для псевдоелемента.
 селект псевдоелемента "після"-надає можливість вказати контент,який буде йти після основного елемента та надати йому стилізацію "::after" та доступніий content для псевдоелемента.*/
 .btn::first-letter {
  color:red;
 }

 .big-text::first-line {
  color:red;
 }

 .input-dark::placeholder {
  color:green;
  background: blue;
 }

 .before-after::before,
 .before-after::after {
  content: "$$$";
  color:green;
  background: yellow;
 }

 /* селектор цільового тегу-вибирає тег,якщо він має свій якір та в URL сторінки вибраний цей якір.
 Якір-це посилання в форматі #id,в якому замість id вказане значення атрибута id певного тегу.(браузер буде прокручувати сторінку до тегу з цим id) ":target"*/
 #test:target {
  color:red;
 }

 /* селектор невідвіданих посилань-вибирає тег <a>,якщо по його посиланню користувач ще не переходив ":link".*/
 .link:link {
  color: red;
 }

 /* селектор наведення-вказує стилізацію в той момент,коли користувач навів мишкою на тег ":hover". */
 .link:hover {
  color: green;
 }
 .card:hover {
  background: rgb(177, 176, 176);
 }

 /* селектор активного тегу-вибирає тег,коли користувач натиснув на нього мишкою ":active". */
 .link:active {
  color: purple;
 }
  .card:active {
  background: purple;
 }

 /* селектор фокусованого тегу-вибирає тег,коли користувач почав взаємодію з ним.використовується в більшості випадків для <input> тегу ":focus".
 селектор фокус всередині тегу-вибирає тег,коли користув.почав взаємодіяти з ним або його дитютегамиювикористюв бульшості випадків для <form> тегу ":focus-within".*/
input {
  background-color: gray;
} 

input:focus {
  background-color: red;
} 
 
.card:focus-within {
  background: red;
}
/* селектор мови тегу-вибирає тег,який має атрибут lang з вказаним значенням ":lang(value)". */
.card:lang(en) > span::after{
  content: ' (en)';
}
/* селектор увімкненого тегу-вибирає тег форми,який доступний та не заблокований для дії ":enabled",для тегів(input,button,select).
селектор вимкненого тегу-вибирає тег форми,який не доступний та заблокований для дії ":disabled",для тегів(input,button,select)*/
button {
  background-color: greenyellow;
}

button:enabled {
  background-color: #01b219;
}

button:disabled {
  background-color:aqua;
}

/* селектор редагованого тегу-вибирає тег форми,в який ми можемо вводити свої знaчення ":read-write" використов.в більшості випадків для <input>.
селектор нередагованого тегу-вибирає тег форми,в який ми не можемо вводити свої знaчення,а лише читати ":read-only".*/
.inp:read-write {
  background-color: blue;
}

.inp:read-only {
  background-color: red;
}

/* селектор відміченого тегу-який вибирає тег форми,який був відмічений або вибраний користувачем ":checked".*/
input[type='checkbox']:checked ~span{
  background: red;
}

/* селектор валідного тегу-який вибирає тег поля форми,який пройшов валідацію і є валідним ":valid".
селектор невалідного тегу-який вибирає тег поля форми,який не пройшов валідацію і не є валідним ":invalid".
селектор необовʼязкового тегу-вибирає тег поля форми,який є не обовʼязковим та має атрибут optional ":optional".*/
.valid:valid {
  background: yellow;
}

.valid:invalid {
  background: goldenrod;
}

.valid:optional {
  background: green;
}

/* селектор за межі діапазону тегу-вибирає <input> тег,значення якого виходить за межі вказаного діапазону атрибутів min та max ":out-of-range". 
селектор в межах діапазону тегу-вибирає <input> тег,значення якого знаходиться в межах вказаного діапазону атрибутів min та max ":in-range".*/
.number:focus {
background: grey;
}

.number:out-of-range {
  background: red;
}

.number:in-range {
  background: green;
}
.number:invalid {
  background: yellow;
}

/* селектор наявності плейсхолдера в тегу-який вибирає <input> тег,який має атрибут placeholder ":placeholder-shown". */
input:placeholder-shown ~span {
  background: pink;
}